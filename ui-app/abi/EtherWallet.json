{
  "contractName": "EtherWallet",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "DepositEther",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "WithdrawEther",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [],
      "name": "getEtherBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositEther",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawEther",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"DepositEther\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"WithdrawEther\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"depositEther\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEtherBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Nikolaos Petridis\",\"kind\":\"dev\",\"methods\":{\"depositEther()\":{\"returns\":{\"_0\":\"The new ether balance of the sender\"}},\"getEtherBalance()\":{\"returns\":{\"_0\":\"The ether balance of the sender\"}},\"withdrawEther(uint256)\":{\"params\":{\"amount\":\"ether amount you want to withdraw\"},\"returns\":{\"_0\":\"The new ether balance of the sender\"}}},\"title\":\"Ether management Wallet contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"depositEther()\":{\"notice\":\"Deposit ether to wallet\"},\"getEtherBalance()\":{\"notice\":\"Get the ether balance of the sender\"},\"withdrawEther(uint256)\":{\"notice\":\"Withdraw ether from wallet to sender address\"}},\"notice\":\"deposit and witdraw ether in a smart contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/EtherWallet.sol\":\"EtherWallet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x86ebc6cea2b539c2d4a79a4754f7c90c43c45c9aaf0aab32ecffb1565afc5e0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d8016f7e49bd65a14769d2c846a7e589603e51c4bf82da94315cc59f54fe2e4\",\"dweb:/ipfs/Qmd92BAbMLEbYYfRWwN1yqDTxEuguenmQ35YFbPh3KEFuP\"]},\"project:/contracts/EtherWallet.sol\":{\"keccak256\":\"0x83ea38f98b30b0ba421e83a8eddc9c049efffbca3ac747a24c4af05effd60aea\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://175e12acb74712cf9a30464ae625d08be5435c5e25b1cd66b9236659c50f8889\",\"dweb:/ipfs/QmPzFZkebXX118U4rtDocUjx3KX8D19UGPyCAZkRFztR62\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600160008190555061092d806100286000396000f3fe6080604052600436106100385760003560e01c80633bed33ce1461013357806398ea5fca14610170578063ea46193e1461018e5761012e565b3661012e57600034111561012c5734600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546100959190610621565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f20d6bac8359f33d79581bfd2b0457cb189fda6d90fed287ddc9f2ba3eb124b6734600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051610123929190610686565b60405180910390a25b005b600080fd5b34801561013f57600080fd5b5061015a600480360381019061015591906106e0565b6101b9565b604051610167919061070d565b60405180910390f35b61017861046c565b604051610185919061070d565b60405180910390f35b34801561019a57600080fd5b506101a36105a1565b6040516101b0919061070d565b60405180910390f35b600060026000541415610201576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f890610785565b60405180910390fd5b6002600081905550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561028b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610282906107f1565b60405180910390fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102da9190610811565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff168360405161030790610876565b60006040518083038185875af1925050503d8060008114610344576040519150601f19603f3d011682016040523d82523d6000602084013e610349565b606091505b505090508061038d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610384906108d7565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167ffd68f27313402be52d2f46b6d391b7b8657000a3062853a4be930f1281072a0184600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051610414929190610686565b60405180910390a2600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549150506001600081905550919050565b60008034111561055c5734600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104c59190610621565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f20d6bac8359f33d79581bfd2b0457cb189fda6d90fed287ddc9f2ba3eb124b6734600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051610553929190610686565b60405180910390a25b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061062c826105e8565b9150610637836105e8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561066c5761066b6105f2565b5b828201905092915050565b610680816105e8565b82525050565b600060408201905061069b6000830185610677565b6106a86020830184610677565b9392505050565b600080fd5b6106bd816105e8565b81146106c857600080fd5b50565b6000813590506106da816106b4565b92915050565b6000602082840312156106f6576106f56106af565b5b6000610704848285016106cb565b91505092915050565b60006020820190506107226000830184610677565b92915050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600061076f601f83610728565b915061077a82610739565b602082019050919050565b6000602082019050818103600083015261079e81610762565b9050919050565b7f4e6f7420656e6f7567682065746865722062616c616e63650000000000000000600082015250565b60006107db601883610728565b91506107e6826107a5565b602082019050919050565b6000602082019050818103600083015261080a816107ce565b9050919050565b600061081c826105e8565b9150610827836105e8565b92508282101561083a576108396105f2565b5b828203905092915050565b600081905092915050565b50565b6000610860600083610845565b915061086b82610850565b600082019050919050565b600061088182610853565b9150819050919050565b7f4661696c656420746f2077697468647261772045746865720000000000000000600082015250565b60006108c1601883610728565b91506108cc8261088b565b602082019050919050565b600060208201905081810360008301526108f0816108b4565b905091905056fea26469706673582212204b33491f0f29833d2f32165a76a060998a9744f4f5ade68faf0b8d1575ea698164736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106100385760003560e01c80633bed33ce1461013357806398ea5fca14610170578063ea46193e1461018e5761012e565b3661012e57600034111561012c5734600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546100959190610621565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f20d6bac8359f33d79581bfd2b0457cb189fda6d90fed287ddc9f2ba3eb124b6734600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051610123929190610686565b60405180910390a25b005b600080fd5b34801561013f57600080fd5b5061015a600480360381019061015591906106e0565b6101b9565b604051610167919061070d565b60405180910390f35b61017861046c565b604051610185919061070d565b60405180910390f35b34801561019a57600080fd5b506101a36105a1565b6040516101b0919061070d565b60405180910390f35b600060026000541415610201576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f890610785565b60405180910390fd5b6002600081905550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561028b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610282906107f1565b60405180910390fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102da9190610811565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff168360405161030790610876565b60006040518083038185875af1925050503d8060008114610344576040519150601f19603f3d011682016040523d82523d6000602084013e610349565b606091505b505090508061038d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610384906108d7565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167ffd68f27313402be52d2f46b6d391b7b8657000a3062853a4be930f1281072a0184600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051610414929190610686565b60405180910390a2600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549150506001600081905550919050565b60008034111561055c5734600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104c59190610621565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f20d6bac8359f33d79581bfd2b0457cb189fda6d90fed287ddc9f2ba3eb124b6734600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051610553929190610686565b60405180910390a25b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061062c826105e8565b9150610637836105e8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561066c5761066b6105f2565b5b828201905092915050565b610680816105e8565b82525050565b600060408201905061069b6000830185610677565b6106a86020830184610677565b9392505050565b600080fd5b6106bd816105e8565b81146106c857600080fd5b50565b6000813590506106da816106b4565b92915050565b6000602082840312156106f6576106f56106af565b5b6000610704848285016106cb565b91505092915050565b60006020820190506107226000830184610677565b92915050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600061076f601f83610728565b915061077a82610739565b602082019050919050565b6000602082019050818103600083015261079e81610762565b9050919050565b7f4e6f7420656e6f7567682065746865722062616c616e63650000000000000000600082015250565b60006107db601883610728565b91506107e6826107a5565b602082019050919050565b6000602082019050818103600083015261080a816107ce565b9050919050565b600061081c826105e8565b9150610827836105e8565b92508282101561083a576108396105f2565b5b828203905092915050565b600081905092915050565b50565b6000610860600083610845565b915061086b82610850565b600082019050919050565b600061088182610853565b9150819050919050565b7f4661696c656420746f2077697468647261772045746865720000000000000000600082015250565b60006108c1601883610728565b91506108cc8261088b565b602082019050919050565b600060208201905081810360008301526108f0816108b4565b905091905056fea26469706673582212204b33491f0f29833d2f32165a76a060998a9744f4f5ade68faf0b8d1575ea698164736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6581:12",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:32:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:16:12",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "73:5:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:12",
                "type": ""
              }
            ],
            "src": "7:77:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "118:152:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "135:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "138:77:12",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "128:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "128:88:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "128:88:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "232:1:12",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "235:4:12",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "225:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "225:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "225:15:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "256:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "259:4:12",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "249:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "249:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "249:15:12"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "90:180:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "320:261:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "330:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "353:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "335:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "335:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "330:1:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "364:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "387:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "369:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "369:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "364:1:12"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "527:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "529:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "529:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "529:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "448:1:12"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "455:66:12",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "523:1:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "451:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "451:74:12"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "445:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "445:81:12"
                  },
                  "nodeType": "YulIf",
                  "src": "442:107:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "559:16:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "570:1:12"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "573:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "566:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "566:9:12"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "559:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "307:1:12",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "310:1:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "316:3:12",
                "type": ""
              }
            ],
            "src": "276:305:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "652:53:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "669:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "692:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "674:17:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "674:24:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "662:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "662:37:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "662:37:12"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "640:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "647:3:12",
                "type": ""
              }
            ],
            "src": "587:118:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "837:206:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "847:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "859:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "870:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "855:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "855:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "847:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "927:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "940:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "951:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "936:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "936:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "883:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "883:71:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "883:71:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1008:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1021:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1032:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1017:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1017:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "964:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "964:72:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "964:72:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "801:9:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "813:6:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "821:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "832:4:12",
                "type": ""
              }
            ],
            "src": "711:332:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1089:35:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1099:19:12",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1115:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1109:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1109:9:12"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1099:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1082:6:12",
                "type": ""
              }
            ],
            "src": "1049:75:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1219:28:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1236:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1239:1:12",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1229:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1229:12:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1229:12:12"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "1130:117:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1342:28:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1359:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1362:1:12",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1352:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1352:12:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1352:12:12"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "1253:117:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1419:79:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1476:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1485:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1488:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1478:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1478:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1478:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1442:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1467:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1449:17:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1449:24:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1439:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1439:35:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1432:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1432:43:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1429:63:12"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1412:5:12",
                "type": ""
              }
            ],
            "src": "1376:122:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1556:87:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1566:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1588:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1575:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1575:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1566:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1631:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1604:26:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1604:33:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1604:33:12"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1534:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1542:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1550:5:12",
                "type": ""
              }
            ],
            "src": "1504:139:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1715:263:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1761:83:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1763:77:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1763:79:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1763:79:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1736:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1745:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1732:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1732:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1757:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1728:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1728:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1725:119:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1854:117:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1869:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1883:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1873:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1898:63:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1933:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1944:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1929:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1929:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1953:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1908:20:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1908:53:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1898:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1685:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1696:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1708:6:12",
                "type": ""
              }
            ],
            "src": "1649:329:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2082:124:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2092:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2104:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2115:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2100:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2100:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2092:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2172:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2185:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2196:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2181:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2181:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2128:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2128:71:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2128:71:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2054:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2066:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2077:4:12",
                "type": ""
              }
            ],
            "src": "1984:222:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2308:73:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2325:3:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2330:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2318:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2318:19:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2318:19:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2346:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2365:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2370:4:12",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2361:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2361:14:12"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2346:11:12"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2280:3:12",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2285:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2296:11:12",
                "type": ""
              }
            ],
            "src": "2212:169:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2493:75:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2515:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2523:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2511:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2511:14:12"
                      },
                      {
                        "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2527:33:12",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2504:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2504:57:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2504:57:12"
                }
              ]
            },
            "name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2485:6:12",
                "type": ""
              }
            ],
            "src": "2387:181:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2720:220:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2730:74:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2796:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2801:2:12",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2737:58:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2737:67:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2730:3:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2902:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                      "nodeType": "YulIdentifier",
                      "src": "2813:88:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2813:93:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2813:93:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2915:19:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2926:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2931:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2922:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2922:12:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2915:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2708:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2716:3:12",
                "type": ""
              }
            ],
            "src": "2574:366:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3117:248:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3127:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3139:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3150:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3135:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3135:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3127:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3174:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3185:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3170:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3170:17:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3193:4:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3199:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3189:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3189:20:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3163:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3163:47:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3163:47:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3219:139:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3353:4:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3227:124:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3227:131:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3219:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3097:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3112:4:12",
                "type": ""
              }
            ],
            "src": "2946:419:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3477:68:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3499:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3507:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3495:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3495:14:12"
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682065746865722062616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3511:26:12",
                        "type": "",
                        "value": "Not enough ether balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3488:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3488:50:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3488:50:12"
                }
              ]
            },
            "name": "store_literal_in_memory_5c6112285fd96bfd5403fcbb83f0fa36bcb2bcd8499011441571d9ab30510c58",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3469:6:12",
                "type": ""
              }
            ],
            "src": "3371:174:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3697:220:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3707:74:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3773:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3778:2:12",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3714:58:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3714:67:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3707:3:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3879:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_5c6112285fd96bfd5403fcbb83f0fa36bcb2bcd8499011441571d9ab30510c58",
                      "nodeType": "YulIdentifier",
                      "src": "3790:88:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3790:93:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3790:93:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3892:19:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3903:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3908:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3899:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3899:12:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3892:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_5c6112285fd96bfd5403fcbb83f0fa36bcb2bcd8499011441571d9ab30510c58_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3685:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3693:3:12",
                "type": ""
              }
            ],
            "src": "3551:366:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4094:248:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4104:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4116:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4127:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4112:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4112:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4104:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4151:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4162:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4147:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4147:17:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4170:4:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4176:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4166:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4166:20:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4140:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4140:47:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4140:47:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4196:139:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4330:4:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_5c6112285fd96bfd5403fcbb83f0fa36bcb2bcd8499011441571d9ab30510c58_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4204:124:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4204:131:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4196:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5c6112285fd96bfd5403fcbb83f0fa36bcb2bcd8499011441571d9ab30510c58__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4074:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4089:4:12",
                "type": ""
              }
            ],
            "src": "3923:419:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4393:146:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4403:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4426:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4408:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4408:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "4403:1:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4437:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4460:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4442:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4442:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "4437:1:12"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4484:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4486:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4486:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4486:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4478:1:12"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4481:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4475:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4475:8:12"
                  },
                  "nodeType": "YulIf",
                  "src": "4472:34:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4516:17:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4528:1:12"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4531:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4524:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4524:9:12"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "4516:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4379:1:12",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4382:1:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "4388:4:12",
                "type": ""
              }
            ],
            "src": "4348:191:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4658:34:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4668:18:12",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "4683:3:12"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "4668:11:12"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4630:3:12",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4635:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "4646:11:12",
                "type": ""
              }
            ],
            "src": "4545:147:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4804:8:12",
              "statements": []
            },
            "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4796:6:12",
                "type": ""
              }
            ],
            "src": "4698:114:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4981:235:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4991:90:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5074:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5079:1:12",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4998:75:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4998:83:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4991:3:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5179:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "nodeType": "YulIdentifier",
                      "src": "5090:88:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5090:93:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5090:93:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5192:18:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5203:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5208:1:12",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5199:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5199:11:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5192:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4969:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4977:3:12",
                "type": ""
              }
            ],
            "src": "4818:398:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5410:191:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5421:154:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5571:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5428:141:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5428:147:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5421:3:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5585:10:12",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "5592:3:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5585:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5397:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5406:3:12",
                "type": ""
              }
            ],
            "src": "5222:379:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5713:68:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5735:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5743:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5731:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5731:14:12"
                      },
                      {
                        "hexValue": "4661696c656420746f207769746864726177204574686572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5747:26:12",
                        "type": "",
                        "value": "Failed to withdraw Ether"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5724:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5724:50:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5724:50:12"
                }
              ]
            },
            "name": "store_literal_in_memory_b14a7bf6d8503b8118f1b23492c09e86366e4bb95acafe29241f3da7e66e8fca",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5705:6:12",
                "type": ""
              }
            ],
            "src": "5607:174:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5933:220:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5943:74:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6009:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6014:2:12",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5950:58:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5950:67:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5943:3:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6115:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_b14a7bf6d8503b8118f1b23492c09e86366e4bb95acafe29241f3da7e66e8fca",
                      "nodeType": "YulIdentifier",
                      "src": "6026:88:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6026:93:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6026:93:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6128:19:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6139:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6144:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6135:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6135:12:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6128:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b14a7bf6d8503b8118f1b23492c09e86366e4bb95acafe29241f3da7e66e8fca_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5921:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5929:3:12",
                "type": ""
              }
            ],
            "src": "5787:366:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6330:248:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6340:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6352:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6363:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6348:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6348:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6340:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6387:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6398:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6383:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6383:17:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6406:4:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6412:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6402:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6402:20:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6376:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6376:47:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6376:47:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6432:139:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6566:4:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b14a7bf6d8503b8118f1b23492c09e86366e4bb95acafe29241f3da7e66e8fca_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6440:124:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6440:131:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6432:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b14a7bf6d8503b8118f1b23492c09e86366e4bb95acafe29241f3da7e66e8fca__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6310:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6325:4:12",
                "type": ""
              }
            ],
            "src": "6159:419:12"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5c6112285fd96bfd5403fcbb83f0fa36bcb2bcd8499011441571d9ab30510c58(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough ether balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_5c6112285fd96bfd5403fcbb83f0fa36bcb2bcd8499011441571d9ab30510c58_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_5c6112285fd96bfd5403fcbb83f0fa36bcb2bcd8499011441571d9ab30510c58(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5c6112285fd96bfd5403fcbb83f0fa36bcb2bcd8499011441571d9ab30510c58__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5c6112285fd96bfd5403fcbb83f0fa36bcb2bcd8499011441571d9ab30510c58_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_b14a7bf6d8503b8118f1b23492c09e86366e4bb95acafe29241f3da7e66e8fca(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to withdraw Ether\")\n\n    }\n\n    function abi_encode_t_stringliteral_b14a7bf6d8503b8118f1b23492c09e86366e4bb95acafe29241f3da7e66e8fca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b14a7bf6d8503b8118f1b23492c09e86366e4bb95acafe29241f3da7e66e8fca(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b14a7bf6d8503b8118f1b23492c09e86366e4bb95acafe29241f3da7e66e8fca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b14a7bf6d8503b8118f1b23492c09e86366e4bb95acafe29241f3da7e66e8fca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 12,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "257:1889:9:-:0;;;;;;;;;;;;;1701:1:0;1806:7;:22;;;;257:1889:9;;;;;;",
  "deployedSourceMap": "257:1889:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;638:1;626:9;:13;622:196;;;727:9;698:13;:25;712:10;698:25;;;;;;;;;;;;;;;;:38;;;;;;;:::i;:::-;;;;;;;;762:10;749:62;;;774:9;785:13;:25;799:10;785:25;;;;;;;;;;;;;;;;749:62;;;;;;;:::i;:::-;;;;;;;;622:196;257:1889;;980:8;;;1708:436;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1287:254;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1093:102;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1708:436;1778:7;1744:1:0;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;1811:13:9::1;:25;1825:10;1811:25;;;;;;;;;;;;;;;;1801:6;:35;;1793:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1905:6;1876:13;:25;1890:10;1876:25;;;;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;;;;;1918:12;1936:10;:15;;1959:6;1936:34;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1917:53;;;1984:7;1976:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;2050:10;2036:60;;;2062:6;2070:13;:25;2084:10;2070:25;;;;;;;;;;;;;;;;2036:60;;;;;;;:::i;:::-;;;;;;;;2114:13;:25;2128:10;2114:25;;;;;;;;;;;;;;;;2107:32;;;1701:1:0::0;2628:7;:22;;;;1708:436:9;;;:::o;1287:254::-;1337:7;1368:1;1356:9;:13;1352:147;;;1408:9;1379:13;:25;1393:10;1379:25;;;;;;;;;;;;;;;;:38;;;;;;;:::i;:::-;;;;;;;;1443:10;1430:62;;;1455:9;1466:13;:25;1480:10;1466:25;;;;;;;;;;;;;;;;1430:62;;;;;;;:::i;:::-;;;;;;;;1352:147;1511:13;:25;1525:10;1511:25;;;;;;;;;;;;;;;;1504:32;;1287:254;:::o;1093:102::-;1143:7;1165:13;:25;1179:10;1165:25;;;;;;;;;;;;;;;;1158:32;;1093:102;:::o;7:77:12:-;44:7;73:5;62:16;;7:77;;;:::o;90:180::-;138:77;135:1;128:88;235:4;232:1;225:15;259:4;256:1;249:15;276:305;316:3;335:20;353:1;335:20;:::i;:::-;330:25;;369:20;387:1;369:20;:::i;:::-;364:25;;523:1;455:66;451:74;448:1;445:81;442:107;;;529:18;;:::i;:::-;442:107;573:1;570;566:9;559:16;;276:305;;;;:::o;587:118::-;674:24;692:5;674:24;:::i;:::-;669:3;662:37;587:118;;:::o;711:332::-;832:4;870:2;859:9;855:18;847:26;;883:71;951:1;940:9;936:17;927:6;883:71;:::i;:::-;964:72;1032:2;1021:9;1017:18;1008:6;964:72;:::i;:::-;711:332;;;;;:::o;1130:117::-;1239:1;1236;1229:12;1376:122;1449:24;1467:5;1449:24;:::i;:::-;1442:5;1439:35;1429:63;;1488:1;1485;1478:12;1429:63;1376:122;:::o;1504:139::-;1550:5;1588:6;1575:20;1566:29;;1604:33;1631:5;1604:33;:::i;:::-;1504:139;;;;:::o;1649:329::-;1708:6;1757:2;1745:9;1736:7;1732:23;1728:32;1725:119;;;1763:79;;:::i;:::-;1725:119;1883:1;1908:53;1953:7;1944:6;1933:9;1929:22;1908:53;:::i;:::-;1898:63;;1854:117;1649:329;;;;:::o;1984:222::-;2077:4;2115:2;2104:9;2100:18;2092:26;;2128:71;2196:1;2185:9;2181:17;2172:6;2128:71;:::i;:::-;1984:222;;;;:::o;2212:169::-;2296:11;2330:6;2325:3;2318:19;2370:4;2365:3;2361:14;2346:29;;2212:169;;;;:::o;2387:181::-;2527:33;2523:1;2515:6;2511:14;2504:57;2387:181;:::o;2574:366::-;2716:3;2737:67;2801:2;2796:3;2737:67;:::i;:::-;2730:74;;2813:93;2902:3;2813:93;:::i;:::-;2931:2;2926:3;2922:12;2915:19;;2574:366;;;:::o;2946:419::-;3112:4;3150:2;3139:9;3135:18;3127:26;;3199:9;3193:4;3189:20;3185:1;3174:9;3170:17;3163:47;3227:131;3353:4;3227:131;:::i;:::-;3219:139;;2946:419;;;:::o;3371:174::-;3511:26;3507:1;3499:6;3495:14;3488:50;3371:174;:::o;3551:366::-;3693:3;3714:67;3778:2;3773:3;3714:67;:::i;:::-;3707:74;;3790:93;3879:3;3790:93;:::i;:::-;3908:2;3903:3;3899:12;3892:19;;3551:366;;;:::o;3923:419::-;4089:4;4127:2;4116:9;4112:18;4104:26;;4176:9;4170:4;4166:20;4162:1;4151:9;4147:17;4140:47;4204:131;4330:4;4204:131;:::i;:::-;4196:139;;3923:419;;;:::o;4348:191::-;4388:4;4408:20;4426:1;4408:20;:::i;:::-;4403:25;;4442:20;4460:1;4442:20;:::i;:::-;4437:25;;4481:1;4478;4475:8;4472:34;;;4486:18;;:::i;:::-;4472:34;4531:1;4528;4524:9;4516:17;;4348:191;;;;:::o;4545:147::-;4646:11;4683:3;4668:18;;4545:147;;;;:::o;4698:114::-;;:::o;4818:398::-;4977:3;4998:83;5079:1;5074:3;4998:83;:::i;:::-;4991:90;;5090:93;5179:3;5090:93;:::i;:::-;5208:1;5203:3;5199:11;5192:18;;4818:398;;;:::o;5222:379::-;5406:3;5428:147;5571:3;5428:147;:::i;:::-;5421:154;;5592:3;5585:10;;5222:379;;;:::o;5607:174::-;5747:26;5743:1;5735:6;5731:14;5724:50;5607:174;:::o;5787:366::-;5929:3;5950:67;6014:2;6009:3;5950:67;:::i;:::-;5943:74;;6026:93;6115:3;6026:93;:::i;:::-;6144:2;6139:3;6135:12;6128:19;;5787:366;;;:::o;6159:419::-;6325:4;6363:2;6352:9;6348:18;6340:26;;6412:9;6406:4;6402:20;6398:1;6387:9;6383:17;6376:47;6440:131;6566:4;6440:131;:::i;:::-;6432:139;;6159:419;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.9;\n\nimport '@openzeppelin/contracts/security/ReentrancyGuard.sol';\n\n/// @title Ether management Wallet contract\n/// @author Nikolaos Petridis\n/// @notice deposit and witdraw ether in a smart contract\ncontract EtherWallet is ReentrancyGuard {\n  mapping(address => uint256) private etherBalances; // user address => ether amount\n\n  event DepositEther(address indexed sender, uint256 amount, uint256 balance);\n  event WithdrawEther(address indexed to, uint256 amount, uint256 balance);\n\n  /// @notice Deposit ether to wallet\n  receive() external payable virtual {\n    if (msg.value > 0) {\n      // Q: Does this uses SafeMath by default? \n      etherBalances[msg.sender] += msg.value;\n      emit DepositEther(msg.sender, msg.value, etherBalances[msg.sender]);\n    }\n  }\n\n  /// @notice fallback always reverts because if ether is\n  /// @notice sent by accident it cannot be withdrawn\n  fallback() external payable virtual {\n    revert();\n  }\n\n  /// @notice Get the ether balance of the sender\n  /// @return The ether balance of the sender\n  function getEtherBalance() external view returns (uint256) {\n    return etherBalances[msg.sender];\n  }\n\n  /// @notice Deposit ether to wallet\n  /// @return The new ether balance of the sender\n  function depositEther() external payable returns (uint256) {\n    if (msg.value > 0) {\n      etherBalances[msg.sender] += msg.value;\n      emit DepositEther(msg.sender, msg.value, etherBalances[msg.sender]);\n    }\n    return etherBalances[msg.sender];\n  }\n\n  /// @notice Withdraw ether from wallet to sender address\n  /// @param amount ether amount you want to withdraw\n  /// @return The new ether balance of the sender\n  function withdrawEther(uint256 amount) external nonReentrant returns (uint256) {\n    require(amount <= etherBalances[msg.sender], \"Not enough ether balance\");\n    \n    etherBalances[msg.sender] -= amount;\n    (bool success, ) = msg.sender.call{value: amount}(\"\");\n    require(success, \"Failed to withdraw Ether\");\n    \n    emit WithdrawEther(msg.sender, amount, etherBalances[msg.sender]);\n    \n    return etherBalances[msg.sender];\n  }\n}\n",
  "sourcePath": "/Users/nikospetridis/projects/blockchain/blockchain-developer-bootcamp-final-project/smart-contracts/contracts/EtherWallet.sol",
  "ast": {
    "absolutePath": "project:/contracts/EtherWallet.sol",
    "exportedSymbols": {
      "EtherWallet": [
        2164
      ],
      "ReentrancyGuard": [
        39
      ]
    },
    "id": 2165,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1994,
        "literals": [
          "solidity",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:22:9"
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 1995,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2165,
        "sourceUnit": 40,
        "src": "61:62:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1997,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39,
              "src": "281:15:9"
            },
            "id": 1998,
            "nodeType": "InheritanceSpecifier",
            "src": "281:15:9"
          }
        ],
        "canonicalName": "EtherWallet",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1996,
          "nodeType": "StructuredDocumentation",
          "src": "125:132:9",
          "text": "@title Ether management Wallet contract\n @author Nikolaos Petridis\n @notice deposit and witdraw ether in a smart contract"
        },
        "fullyImplemented": true,
        "id": 2164,
        "linearizedBaseContracts": [
          2164,
          39
        ],
        "name": "EtherWallet",
        "nameLocation": "266:11:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2002,
            "mutability": "mutable",
            "name": "etherBalances",
            "nameLocation": "337:13:9",
            "nodeType": "VariableDeclaration",
            "scope": 2164,
            "src": "301:49:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2001,
              "keyType": {
                "id": 1999,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "309:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "301:27:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2000,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "320:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 2010,
            "name": "DepositEther",
            "nameLocation": "393:12:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2004,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "422:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2010,
                  "src": "406:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2003,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "406:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2006,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "438:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2010,
                  "src": "430:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2005,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "430:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2008,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "454:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2010,
                  "src": "446:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2007,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "446:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "405:57:9"
            },
            "src": "387:76:9"
          },
          {
            "anonymous": false,
            "id": 2018,
            "name": "WithdrawEther",
            "nameLocation": "472:13:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2012,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "502:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2018,
                  "src": "486:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "486:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2014,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "514:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2018,
                  "src": "506:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2013,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "506:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2016,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "530:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2018,
                  "src": "522:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2015,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "522:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "485:53:9"
            },
            "src": "466:73:9"
          },
          {
            "body": {
              "id": 2047,
              "nodeType": "Block",
              "src": "616:206:9",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2022,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "626:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "626:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "638:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "626:13:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2046,
                  "nodeType": "IfStatement",
                  "src": "622:196:9",
                  "trueBody": {
                    "id": 2045,
                    "nodeType": "Block",
                    "src": "641:177:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 2032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2026,
                              "name": "etherBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2002,
                              "src": "698:13:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2029,
                            "indexExpression": {
                              "expression": {
                                "id": 2027,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "712:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2028,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "712:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "698:25:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2030,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "727:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2031,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "727:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "698:38:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2033,
                        "nodeType": "ExpressionStatement",
                        "src": "698:38:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2035,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "762:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2036,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "762:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2037,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "774:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2038,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "774:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 2039,
                                "name": "etherBalances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2002,
                                "src": "785:13:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 2042,
                              "indexExpression": {
                                "expression": {
                                  "id": 2040,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "799:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2041,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "799:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "785:25:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2034,
                            "name": "DepositEther",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2010,
                            "src": "749:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 2043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "749:62:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2044,
                        "nodeType": "EmitStatement",
                        "src": "744:67:9"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2019,
              "nodeType": "StructuredDocumentation",
              "src": "543:35:9",
              "text": "@notice Deposit ether to wallet"
            },
            "id": 2048,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "588:2:9"
            },
            "returnParameters": {
              "id": 2021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "616:0:9"
            },
            "scope": 2164,
            "src": "581:241:9",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2055,
              "nodeType": "Block",
              "src": "974:19:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2052,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "980:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 2053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "980:8:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2054,
                  "nodeType": "ExpressionStatement",
                  "src": "980:8:9"
                }
              ]
            },
            "documentation": {
              "id": 2049,
              "nodeType": "StructuredDocumentation",
              "src": "826:109:9",
              "text": "@notice fallback always reverts because if ether is\n @notice sent by accident it cannot be withdrawn"
            },
            "id": 2056,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "946:2:9"
            },
            "returnParameters": {
              "id": 2051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "974:0:9"
            },
            "scope": 2164,
            "src": "938:55:9",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2067,
              "nodeType": "Block",
              "src": "1152:43:9",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2062,
                      "name": "etherBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2002,
                      "src": "1165:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2065,
                    "indexExpression": {
                      "expression": {
                        "id": 2063,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1179:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1179:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1165:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2061,
                  "id": 2066,
                  "nodeType": "Return",
                  "src": "1158:32:9"
                }
              ]
            },
            "documentation": {
              "id": 2057,
              "nodeType": "StructuredDocumentation",
              "src": "997:93:9",
              "text": "@notice Get the ether balance of the sender\n @return The ether balance of the sender"
            },
            "functionSelector": "ea46193e",
            "id": 2068,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEtherBalance",
            "nameLocation": "1102:15:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2058,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1117:2:9"
            },
            "returnParameters": {
              "id": 2061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2060,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2068,
                  "src": "1143:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2059,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1143:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1142:9:9"
            },
            "scope": 2164,
            "src": "1093:102:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2104,
              "nodeType": "Block",
              "src": "1346:195:9",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2074,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1356:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1356:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2076,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1368:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1356:13:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2098,
                  "nodeType": "IfStatement",
                  "src": "1352:147:9",
                  "trueBody": {
                    "id": 2097,
                    "nodeType": "Block",
                    "src": "1371:128:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 2084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2078,
                              "name": "etherBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2002,
                              "src": "1379:13:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2081,
                            "indexExpression": {
                              "expression": {
                                "id": 2079,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1393:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2080,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1393:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1379:25:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2082,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1408:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "1408:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1379:38:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2085,
                        "nodeType": "ExpressionStatement",
                        "src": "1379:38:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2087,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1443:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2088,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1443:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2089,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1455:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2090,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "1455:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 2091,
                                "name": "etherBalances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2002,
                                "src": "1466:13:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 2094,
                              "indexExpression": {
                                "expression": {
                                  "id": 2092,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1480:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2093,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1480:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1466:25:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2086,
                            "name": "DepositEther",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2010,
                            "src": "1430:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 2095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1430:62:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2096,
                        "nodeType": "EmitStatement",
                        "src": "1425:67:9"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2099,
                      "name": "etherBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2002,
                      "src": "1511:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2102,
                    "indexExpression": {
                      "expression": {
                        "id": 2100,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1525:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1525:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1511:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2073,
                  "id": 2103,
                  "nodeType": "Return",
                  "src": "1504:32:9"
                }
              ]
            },
            "documentation": {
              "id": 2069,
              "nodeType": "StructuredDocumentation",
              "src": "1199:85:9",
              "text": "@notice Deposit ether to wallet\n @return The new ether balance of the sender"
            },
            "functionSelector": "98ea5fca",
            "id": 2105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositEther",
            "nameLocation": "1296:12:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1308:2:9"
            },
            "returnParameters": {
              "id": 2073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2072,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2105,
                  "src": "1337:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2071,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1337:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1336:9:9"
            },
            "scope": 2164,
            "src": "1287:254:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2162,
              "nodeType": "Block",
              "src": "1787:357:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2116,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2108,
                          "src": "1801:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 2117,
                            "name": "etherBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2002,
                            "src": "1811:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2120,
                          "indexExpression": {
                            "expression": {
                              "id": 2118,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1825:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1825:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1811:25:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1801:35:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682065746865722062616c616e6365",
                        "id": 2122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1838:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5c6112285fd96bfd5403fcbb83f0fa36bcb2bcd8499011441571d9ab30510c58",
                          "typeString": "literal_string \"Not enough ether balance\""
                        },
                        "value": "Not enough ether balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5c6112285fd96bfd5403fcbb83f0fa36bcb2bcd8499011441571d9ab30510c58",
                          "typeString": "literal_string \"Not enough ether balance\""
                        }
                      ],
                      "id": 2115,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1793:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1793:72:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2124,
                  "nodeType": "ExpressionStatement",
                  "src": "1793:72:9"
                },
                {
                  "expression": {
                    "id": 2130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2125,
                        "name": "etherBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2002,
                        "src": "1876:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2128,
                      "indexExpression": {
                        "expression": {
                          "id": 2126,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1890:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1890:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1876:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 2129,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2108,
                      "src": "1905:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1876:35:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2131,
                  "nodeType": "ExpressionStatement",
                  "src": "1876:35:9"
                },
                {
                  "assignments": [
                    2133,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2133,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1923:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2162,
                      "src": "1918:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2132,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1918:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 2141,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 2139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1967:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 2134,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1936:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1936:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "1936:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 2138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 2137,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2108,
                          "src": "1959:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1936:30:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 2140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1936:34:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1917:53:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2143,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2133,
                        "src": "1984:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f207769746864726177204574686572",
                        "id": 2144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1993:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b14a7bf6d8503b8118f1b23492c09e86366e4bb95acafe29241f3da7e66e8fca",
                          "typeString": "literal_string \"Failed to withdraw Ether\""
                        },
                        "value": "Failed to withdraw Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b14a7bf6d8503b8118f1b23492c09e86366e4bb95acafe29241f3da7e66e8fca",
                          "typeString": "literal_string \"Failed to withdraw Ether\""
                        }
                      ],
                      "id": 2142,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1976:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1976:44:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2146,
                  "nodeType": "ExpressionStatement",
                  "src": "1976:44:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2148,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2050:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2050:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2150,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2108,
                        "src": "2062:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 2151,
                          "name": "etherBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2002,
                          "src": "2070:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2154,
                        "indexExpression": {
                          "expression": {
                            "id": 2152,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2084:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2084:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2070:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2147,
                      "name": "WithdrawEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2018,
                      "src": "2036:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 2155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2036:60:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2156,
                  "nodeType": "EmitStatement",
                  "src": "2031:65:9"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2157,
                      "name": "etherBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2002,
                      "src": "2114:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2160,
                    "indexExpression": {
                      "expression": {
                        "id": 2158,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2128:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2128:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2114:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2114,
                  "id": 2161,
                  "nodeType": "Return",
                  "src": "2107:32:9"
                }
              ]
            },
            "documentation": {
              "id": 2106,
              "nodeType": "StructuredDocumentation",
              "src": "1545:160:9",
              "text": "@notice Withdraw ether from wallet to sender address\n @param amount ether amount you want to withdraw\n @return The new ether balance of the sender"
            },
            "functionSelector": "3bed33ce",
            "id": 2163,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2111,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2110,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38,
                  "src": "1756:12:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "1756:12:9"
              }
            ],
            "name": "withdrawEther",
            "nameLocation": "1717:13:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2108,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1739:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2163,
                  "src": "1731:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1731:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1730:16:9"
            },
            "returnParameters": {
              "id": 2114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2113,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2163,
                  "src": "1778:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2112,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1778:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1777:9:9"
            },
            "scope": 2164,
            "src": "1708:436:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2165,
        "src": "257:1889:9",
        "usedErrors": []
      }
    ],
    "src": "37:2110:9"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/EtherWallet.sol",
    "exportedSymbols": {
      "EtherWallet": [
        2164
      ],
      "ReentrancyGuard": [
        39
      ]
    },
    "id": 2165,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1994,
        "literals": [
          "solidity",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:22:9"
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 1995,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2165,
        "sourceUnit": 40,
        "src": "61:62:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1997,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39,
              "src": "281:15:9"
            },
            "id": 1998,
            "nodeType": "InheritanceSpecifier",
            "src": "281:15:9"
          }
        ],
        "canonicalName": "EtherWallet",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1996,
          "nodeType": "StructuredDocumentation",
          "src": "125:132:9",
          "text": "@title Ether management Wallet contract\n @author Nikolaos Petridis\n @notice deposit and witdraw ether in a smart contract"
        },
        "fullyImplemented": true,
        "id": 2164,
        "linearizedBaseContracts": [
          2164,
          39
        ],
        "name": "EtherWallet",
        "nameLocation": "266:11:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2002,
            "mutability": "mutable",
            "name": "etherBalances",
            "nameLocation": "337:13:9",
            "nodeType": "VariableDeclaration",
            "scope": 2164,
            "src": "301:49:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2001,
              "keyType": {
                "id": 1999,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "309:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "301:27:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2000,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "320:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 2010,
            "name": "DepositEther",
            "nameLocation": "393:12:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2004,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "422:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2010,
                  "src": "406:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2003,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "406:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2006,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "438:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2010,
                  "src": "430:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2005,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "430:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2008,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "454:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2010,
                  "src": "446:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2007,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "446:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "405:57:9"
            },
            "src": "387:76:9"
          },
          {
            "anonymous": false,
            "id": 2018,
            "name": "WithdrawEther",
            "nameLocation": "472:13:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2012,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "502:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2018,
                  "src": "486:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "486:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2014,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "514:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2018,
                  "src": "506:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2013,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "506:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2016,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "530:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2018,
                  "src": "522:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2015,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "522:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "485:53:9"
            },
            "src": "466:73:9"
          },
          {
            "body": {
              "id": 2047,
              "nodeType": "Block",
              "src": "616:206:9",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2022,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "626:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "626:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "638:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "626:13:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2046,
                  "nodeType": "IfStatement",
                  "src": "622:196:9",
                  "trueBody": {
                    "id": 2045,
                    "nodeType": "Block",
                    "src": "641:177:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 2032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2026,
                              "name": "etherBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2002,
                              "src": "698:13:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2029,
                            "indexExpression": {
                              "expression": {
                                "id": 2027,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "712:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2028,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "712:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "698:25:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2030,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "727:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2031,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "727:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "698:38:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2033,
                        "nodeType": "ExpressionStatement",
                        "src": "698:38:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2035,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "762:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2036,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "762:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2037,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "774:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2038,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "774:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 2039,
                                "name": "etherBalances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2002,
                                "src": "785:13:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 2042,
                              "indexExpression": {
                                "expression": {
                                  "id": 2040,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "799:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2041,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "799:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "785:25:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2034,
                            "name": "DepositEther",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2010,
                            "src": "749:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 2043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "749:62:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2044,
                        "nodeType": "EmitStatement",
                        "src": "744:67:9"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2019,
              "nodeType": "StructuredDocumentation",
              "src": "543:35:9",
              "text": "@notice Deposit ether to wallet"
            },
            "id": 2048,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "588:2:9"
            },
            "returnParameters": {
              "id": 2021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "616:0:9"
            },
            "scope": 2164,
            "src": "581:241:9",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2055,
              "nodeType": "Block",
              "src": "974:19:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2052,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "980:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 2053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "980:8:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2054,
                  "nodeType": "ExpressionStatement",
                  "src": "980:8:9"
                }
              ]
            },
            "documentation": {
              "id": 2049,
              "nodeType": "StructuredDocumentation",
              "src": "826:109:9",
              "text": "@notice fallback always reverts because if ether is\n @notice sent by accident it cannot be withdrawn"
            },
            "id": 2056,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "946:2:9"
            },
            "returnParameters": {
              "id": 2051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "974:0:9"
            },
            "scope": 2164,
            "src": "938:55:9",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2067,
              "nodeType": "Block",
              "src": "1152:43:9",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2062,
                      "name": "etherBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2002,
                      "src": "1165:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2065,
                    "indexExpression": {
                      "expression": {
                        "id": 2063,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1179:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1179:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1165:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2061,
                  "id": 2066,
                  "nodeType": "Return",
                  "src": "1158:32:9"
                }
              ]
            },
            "documentation": {
              "id": 2057,
              "nodeType": "StructuredDocumentation",
              "src": "997:93:9",
              "text": "@notice Get the ether balance of the sender\n @return The ether balance of the sender"
            },
            "functionSelector": "ea46193e",
            "id": 2068,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEtherBalance",
            "nameLocation": "1102:15:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2058,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1117:2:9"
            },
            "returnParameters": {
              "id": 2061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2060,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2068,
                  "src": "1143:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2059,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1143:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1142:9:9"
            },
            "scope": 2164,
            "src": "1093:102:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2104,
              "nodeType": "Block",
              "src": "1346:195:9",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2074,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1356:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1356:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2076,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1368:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1356:13:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2098,
                  "nodeType": "IfStatement",
                  "src": "1352:147:9",
                  "trueBody": {
                    "id": 2097,
                    "nodeType": "Block",
                    "src": "1371:128:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 2084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2078,
                              "name": "etherBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2002,
                              "src": "1379:13:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2081,
                            "indexExpression": {
                              "expression": {
                                "id": 2079,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1393:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2080,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1393:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1379:25:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2082,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1408:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "1408:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1379:38:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2085,
                        "nodeType": "ExpressionStatement",
                        "src": "1379:38:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2087,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1443:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2088,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1443:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2089,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1455:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2090,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "1455:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 2091,
                                "name": "etherBalances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2002,
                                "src": "1466:13:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 2094,
                              "indexExpression": {
                                "expression": {
                                  "id": 2092,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1480:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2093,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1480:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1466:25:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2086,
                            "name": "DepositEther",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2010,
                            "src": "1430:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 2095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1430:62:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2096,
                        "nodeType": "EmitStatement",
                        "src": "1425:67:9"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2099,
                      "name": "etherBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2002,
                      "src": "1511:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2102,
                    "indexExpression": {
                      "expression": {
                        "id": 2100,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1525:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1525:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1511:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2073,
                  "id": 2103,
                  "nodeType": "Return",
                  "src": "1504:32:9"
                }
              ]
            },
            "documentation": {
              "id": 2069,
              "nodeType": "StructuredDocumentation",
              "src": "1199:85:9",
              "text": "@notice Deposit ether to wallet\n @return The new ether balance of the sender"
            },
            "functionSelector": "98ea5fca",
            "id": 2105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositEther",
            "nameLocation": "1296:12:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1308:2:9"
            },
            "returnParameters": {
              "id": 2073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2072,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2105,
                  "src": "1337:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2071,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1337:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1336:9:9"
            },
            "scope": 2164,
            "src": "1287:254:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2162,
              "nodeType": "Block",
              "src": "1787:357:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2116,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2108,
                          "src": "1801:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 2117,
                            "name": "etherBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2002,
                            "src": "1811:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2120,
                          "indexExpression": {
                            "expression": {
                              "id": 2118,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1825:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1825:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1811:25:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1801:35:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682065746865722062616c616e6365",
                        "id": 2122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1838:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5c6112285fd96bfd5403fcbb83f0fa36bcb2bcd8499011441571d9ab30510c58",
                          "typeString": "literal_string \"Not enough ether balance\""
                        },
                        "value": "Not enough ether balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5c6112285fd96bfd5403fcbb83f0fa36bcb2bcd8499011441571d9ab30510c58",
                          "typeString": "literal_string \"Not enough ether balance\""
                        }
                      ],
                      "id": 2115,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1793:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1793:72:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2124,
                  "nodeType": "ExpressionStatement",
                  "src": "1793:72:9"
                },
                {
                  "expression": {
                    "id": 2130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2125,
                        "name": "etherBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2002,
                        "src": "1876:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2128,
                      "indexExpression": {
                        "expression": {
                          "id": 2126,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1890:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1890:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1876:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 2129,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2108,
                      "src": "1905:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1876:35:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2131,
                  "nodeType": "ExpressionStatement",
                  "src": "1876:35:9"
                },
                {
                  "assignments": [
                    2133,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2133,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1923:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2162,
                      "src": "1918:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2132,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1918:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 2141,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 2139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1967:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 2134,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1936:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1936:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "1936:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 2138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 2137,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2108,
                          "src": "1959:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1936:30:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 2140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1936:34:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1917:53:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2143,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2133,
                        "src": "1984:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f207769746864726177204574686572",
                        "id": 2144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1993:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b14a7bf6d8503b8118f1b23492c09e86366e4bb95acafe29241f3da7e66e8fca",
                          "typeString": "literal_string \"Failed to withdraw Ether\""
                        },
                        "value": "Failed to withdraw Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b14a7bf6d8503b8118f1b23492c09e86366e4bb95acafe29241f3da7e66e8fca",
                          "typeString": "literal_string \"Failed to withdraw Ether\""
                        }
                      ],
                      "id": 2142,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1976:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1976:44:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2146,
                  "nodeType": "ExpressionStatement",
                  "src": "1976:44:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2148,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2050:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2050:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2150,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2108,
                        "src": "2062:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 2151,
                          "name": "etherBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2002,
                          "src": "2070:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2154,
                        "indexExpression": {
                          "expression": {
                            "id": 2152,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2084:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2084:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2070:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2147,
                      "name": "WithdrawEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2018,
                      "src": "2036:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 2155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2036:60:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2156,
                  "nodeType": "EmitStatement",
                  "src": "2031:65:9"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2157,
                      "name": "etherBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2002,
                      "src": "2114:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2160,
                    "indexExpression": {
                      "expression": {
                        "id": 2158,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2128:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2128:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2114:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2114,
                  "id": 2161,
                  "nodeType": "Return",
                  "src": "2107:32:9"
                }
              ]
            },
            "documentation": {
              "id": 2106,
              "nodeType": "StructuredDocumentation",
              "src": "1545:160:9",
              "text": "@notice Withdraw ether from wallet to sender address\n @param amount ether amount you want to withdraw\n @return The new ether balance of the sender"
            },
            "functionSelector": "3bed33ce",
            "id": 2163,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2111,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2110,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38,
                  "src": "1756:12:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "1756:12:9"
              }
            ],
            "name": "withdrawEther",
            "nameLocation": "1717:13:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2108,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1739:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2163,
                  "src": "1731:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1731:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1730:16:9"
            },
            "returnParameters": {
              "id": 2114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2113,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2163,
                  "src": "1778:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2112,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1778:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1777:9:9"
            },
            "scope": 2164,
            "src": "1708:436:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2165,
        "src": "257:1889:9",
        "usedErrors": []
      }
    ],
    "src": "37:2110:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-28T13:26:09.465Z",
  "devdoc": {
    "author": "Nikolaos Petridis",
    "kind": "dev",
    "methods": {
      "depositEther()": {
        "returns": {
          "_0": "The new ether balance of the sender"
        }
      },
      "getEtherBalance()": {
        "returns": {
          "_0": "The ether balance of the sender"
        }
      },
      "withdrawEther(uint256)": {
        "params": {
          "amount": "ether amount you want to withdraw"
        },
        "returns": {
          "_0": "The new ether balance of the sender"
        }
      }
    },
    "title": "Ether management Wallet contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "depositEther()": {
        "notice": "Deposit ether to wallet"
      },
      "getEtherBalance()": {
        "notice": "Get the ether balance of the sender"
      },
      "withdrawEther(uint256)": {
        "notice": "Withdraw ether from wallet to sender address"
      }
    },
    "notice": "deposit and witdraw ether in a smart contract",
    "version": 1
  }
}